sudo: required
services:
  - docker
# env:
#   global:
#     - SHA=$(git rev-parse HEAD)
#     - CLOUDSDK_CORE_DISABLE_PROMPTS=1
cache:
  directories:
  - $HOME/.local

before_install:
  - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in rootkey.csv.enc -out rootkey.csv -d
  # - curl https://sdk.cloud.google.com | bash > /dev/null;
  - curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip | bash > /dev/null;
  - unzip awscli-bundle.zip
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  #- ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
  # - source $HOME/google-cloud-sdk/path.bash.inc
  #- source $HOME/awscli-bundle/path.bash.inc
  # - gcloud components update kubectl
  #- aws components update kubectl
  - curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/darwin/amd64/kubectl
  - chmod +x ./kubectl
  - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
  - echo 'export PATH=$HOME/bin:$PATH' >> ~/.bash_profile
  # - gcloud auth activate-service-account --key-file service-account.json
  #- aws auth activate-service-account --key-file service-account.json
  # - gcloud config set project multi-k8s-255813
  #- aws config set project multi-k8s-255813
  # - gcloud config set compute/zone asia-south1-a
  - export AWS_ACCESS_KEY_ID=AKIAI6RCCVOEP523WDWQ
  - export AWS_SECRET_ACCESS_KEY=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
  - aws configure set region us-west-2
  - aws eks --region us-west-2 update-kubeconfig --name $AWS_CLUSTER --role-arn "arn:aws:iam::585830484885:role/arijitiam"
  - aws configure set project multi-k8s-255813
  - aws get-cluster-credentials arijitcluster
  # - gcloud container clusters get-credentials multi-cluster
  #- aws container clusters get-credentials multi-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t arijitchat2006/deploycloud -f ./client/Dockerfile.dev ./client

script:
  - docker run arijitchat2006/deploycloud npm test -- --coverage

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
